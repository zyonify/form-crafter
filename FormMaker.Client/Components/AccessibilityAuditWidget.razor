@using FormMaker.Client.Services
@inject AccessibilityAuditService AuditService

<!-- Floating Accessibility Audit Widget -->
<div class="a11y-audit-widget @(isExpanded ? "expanded" : "collapsed")">
    @if (!isExpanded)
    {
        <!-- Minimized Button -->
        <button class="a11y-audit-toggle" @onclick="ToggleWidget" aria-label="Open accessibility audit widget">
            <span class="a11y-icon">‚ôø</span>
            @if (lastResult != null && lastResult.Violations?.Count > 0)
            {
                <span class="a11y-badge">@lastResult.Violations.Count</span>
            }
        </button>
    }
    else
    {
        <!-- Expanded Panel -->
        <div class="a11y-audit-panel">
            <div class="a11y-audit-header">
                <h3>A11y Audit</h3>
                <button class="a11y-close-btn" @onclick="ToggleWidget" aria-label="Close accessibility audit widget">√ó</button>
            </div>

            <div class="a11y-audit-body">
                <button class="a11y-run-btn" @onclick="RunAudit" disabled="@isRunning">
                    @if (isRunning)
                    {
                        <span>‚è≥ Running...</span>
                    }
                    else
                    {
                        <span>‚ñ∂Ô∏è Run Audit</span>
                    }
                </button>

                @if (lastResult != null)
                {
                    @if (!lastResult.Success)
                    {
                        <div class="a11y-error">‚ùå @lastResult.Error</div>
                    }
                    else
                    {
                        <div class="a11y-summary">
                            <div class="a11y-stat violations">
                                <div class="a11y-stat-value">@(lastResult.Violations?.Count ?? 0)</div>
                                <div class="a11y-stat-label">Violations</div>
                            </div>
                            <div class="a11y-stat passes">
                                <div class="a11y-stat-value">@lastResult.Passes</div>
                                <div class="a11y-stat-label">Passes</div>
                            </div>
                            <div class="a11y-stat incomplete">
                                <div class="a11y-stat-value">@(lastResult.Incomplete?.Count ?? 0)</div>
                                <div class="a11y-stat-label">Incomplete</div>
                            </div>
                        </div>

                        @if (lastResult.Violations != null && lastResult.Violations.Count > 0)
                        {
                            <div class="a11y-violations">
                                <strong>Violations by Impact:</strong>
                                <div class="a11y-impact-chips">
                                    <span class="a11y-chip critical">‚ö†Ô∏è Critical: @lastResult.Violations.Count(v => v.Impact == "critical")</span>
                                    <span class="a11y-chip serious">üî¥ Serious: @lastResult.Violations.Count(v => v.Impact == "serious")</span>
                                    <span class="a11y-chip moderate">üü° Moderate: @lastResult.Violations.Count(v => v.Impact == "moderate")</span>
                                    <span class="a11y-chip minor">üîµ Minor: @lastResult.Violations.Count(v => v.Impact == "minor")</span>
                                </div>

                                <div class="a11y-violation-list">
                                    @foreach (var violation in lastResult.Violations.OrderByDescending(v => GetImpactPriority(v.Impact)).Take(5))
                                    {
                                        <div class="a11y-violation-item @violation.Impact">
                                            <div class="a11y-violation-title">
                                                <span class="a11y-impact-badge">@violation.Impact?.ToUpper()</span>
                                                @violation.Help
                                            </div>
                                            <div class="a11y-violation-meta">
                                                ID: @violation.Id | Elements: @(violation.Nodes?.Count ?? 0)
                                            </div>
                                        </div>
                                    }
                                </div>

                                <a href="/accessibility-audit" class="a11y-full-report-link">
                                    üìä View Full Report
                                </a>
                            </div>
                        }
                    }
                }
            </div>
        </div>
    }
</div>

<style>
    .a11y-audit-widget {
        position: fixed;
        bottom: 20px;
        right: 20px;
        z-index: 9999;
        font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, sans-serif;
    }

    .a11y-audit-toggle {
        width: 60px;
        height: 60px;
        border-radius: 50%;
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        border: none;
        color: white;
        font-size: 24px;
        cursor: pointer;
        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.3);
        display: flex;
        align-items: center;
        justify-content: center;
        transition: transform 0.2s;
        position: relative;
    }

    .a11y-audit-toggle:hover {
        transform: scale(1.1);
    }

    .a11y-badge {
        position: absolute;
        top: -5px;
        right: -5px;
        background: #ff4444;
        color: white;
        border-radius: 50%;
        width: 24px;
        height: 24px;
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: 12px;
        font-weight: bold;
    }

    .a11y-audit-panel {
        width: 400px;
        max-height: 600px;
        background: white;
        border-radius: 12px;
        box-shadow: 0 8px 32px rgba(0, 0, 0, 0.3);
        overflow: hidden;
        display: flex;
        flex-direction: column;
    }

    .a11y-audit-header {
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        color: white;
        padding: 16px;
        display: flex;
        justify-content: space-between;
        align-items: center;
    }

    .a11y-audit-header h3 {
        margin: 0;
        font-size: 18px;
        font-weight: 600;
    }

    .a11y-close-btn {
        background: transparent;
        border: none;
        color: white;
        font-size: 28px;
        cursor: pointer;
        padding: 0;
        width: 32px;
        height: 32px;
        display: flex;
        align-items: center;
        justify-content: center;
        border-radius: 4px;
    }

    .a11y-close-btn:hover {
        background: rgba(255, 255, 255, 0.2);
    }

    .a11y-audit-body {
        padding: 16px;
        overflow-y: auto;
        max-height: 520px;
    }

    .a11y-run-btn {
        width: 100%;
        padding: 12px;
        background: #667eea;
        color: white;
        border: none;
        border-radius: 8px;
        font-size: 16px;
        font-weight: 600;
        cursor: pointer;
        margin-bottom: 16px;
        transition: background 0.2s;
    }

    .a11y-run-btn:hover:not(:disabled) {
        background: #5568d3;
    }

    .a11y-run-btn:disabled {
        background: #ccc;
        cursor: not-allowed;
    }

    .a11y-summary {
        display: grid;
        grid-template-columns: repeat(3, 1fr);
        gap: 12px;
        margin-bottom: 16px;
    }

    .a11y-stat {
        padding: 12px;
        border-radius: 8px;
        text-align: center;
    }

    .a11y-stat.violations {
        background: #ffebee;
    }

    .a11y-stat.passes {
        background: #e8f5e9;
    }

    .a11y-stat.incomplete {
        background: #fff3e0;
    }

    .a11y-stat-value {
        font-size: 24px;
        font-weight: bold;
        margin-bottom: 4px;
    }

    .a11y-stat-label {
        font-size: 12px;
        color: #666;
    }

    .a11y-violations {
        margin-top: 16px;
    }

    .a11y-impact-chips {
        display: flex;
        flex-wrap: wrap;
        gap: 8px;
        margin: 12px 0;
    }

    .a11y-chip {
        padding: 4px 12px;
        border-radius: 16px;
        font-size: 12px;
        font-weight: 600;
    }

    .a11y-chip.critical {
        background: #d32f2f;
        color: white;
    }

    .a11y-chip.serious {
        background: #f44336;
        color: white;
    }

    .a11y-chip.moderate {
        background: #ff9800;
        color: white;
    }

    .a11y-chip.minor {
        background: #2196f3;
        color: white;
    }

    .a11y-violation-list {
        margin-top: 12px;
        max-height: 300px;
        overflow-y: auto;
    }

    .a11y-violation-item {
        padding: 12px;
        margin-bottom: 8px;
        border-radius: 8px;
        background: #f5f5f5;
        border-left: 4px solid;
    }

    .a11y-violation-item.critical {
        border-left-color: #d32f2f;
    }

    .a11y-violation-item.serious {
        border-left-color: #f44336;
    }

    .a11y-violation-item.moderate {
        border-left-color: #ff9800;
    }

    .a11y-violation-item.minor {
        border-left-color: #2196f3;
    }

    .a11y-violation-title {
        font-size: 14px;
        margin-bottom: 4px;
        display: flex;
        align-items: center;
        gap: 8px;
    }

    .a11y-impact-badge {
        font-size: 10px;
        padding: 2px 6px;
        border-radius: 4px;
        background: rgba(0, 0, 0, 0.1);
        font-weight: bold;
    }

    .a11y-violation-meta {
        font-size: 11px;
        color: #666;
        font-family: monospace;
    }

    .a11y-full-report-link {
        display: block;
        margin-top: 16px;
        padding: 12px;
        background: #f5f5f5;
        border-radius: 8px;
        text-align: center;
        color: #667eea;
        text-decoration: none;
        font-weight: 600;
        transition: background 0.2s;
    }

    .a11y-full-report-link:hover {
        background: #e0e0e0;
    }

    .a11y-error {
        padding: 12px;
        background: #ffebee;
        border-radius: 8px;
        color: #d32f2f;
        margin-top: 12px;
    }
</style>

@code {
    private bool isExpanded = false;
    private bool isRunning = false;
    private AuditResult? lastResult;

    private void ToggleWidget()
    {
        isExpanded = !isExpanded;
    }

    private async Task RunAudit()
    {
        isRunning = true;
        await Task.Delay(100);

        lastResult = await AuditService.RunAuditAsync();

        isRunning = false;
    }

    private int GetImpactPriority(string? impact)
    {
        return impact?.ToLower() switch
        {
            "critical" => 4,
            "serious" => 3,
            "moderate" => 2,
            "minor" => 1,
            _ => 0
        };
    }
}
